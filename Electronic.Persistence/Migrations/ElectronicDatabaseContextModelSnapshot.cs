// <auto-generated />
using System;
using Electronic.Persistence.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Electronic.Persistence.Migrations
{
    [DbContext(typeof(ElectronicDatabaseContext))]
    partial class ElectronicDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Electronic.Domain.Models.Advertisement", b =>
                {
                    b.Property<int>("AdvertisementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdvertisementId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<long>("MediaId")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("AdvertisementId");

                    b.HasIndex("MediaId")
                        .IsUnique();

                    b.ToTable("Advertisement");
                });

            modelBuilder.Entity("Electronic.Domain.Models.Core.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("AddressLineOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLineTwo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateOrProvinceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("StateOrProvinceId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Electronic.Domain.Models.Core.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("Code3")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Electronic.Domain.Models.Core.District", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistrictId"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateOrProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DistrictId");

                    b.HasIndex("StateOrProvinceId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("Electronic.Domain.Models.Core.Media", b =>
                {
                    b.Property<long>("MediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MediaId"));

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileSize")
                        .HasColumnType("int");

                    b.Property<int>("MediaType")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MediaId");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("Electronic.Domain.Models.Core.StateOrProvince", b =>
                {
                    b.Property<int>("StateOrProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateOrProvinceId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateOrProvinceId");

                    b.HasIndex("CountryId");

                    b.ToTable("StateOrProvinces");
                });

            modelBuilder.Entity("Electronic.Domain.Models.New.NewCategory", b =>
                {
                    b.Property<int>("NewCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewCategoryId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("NewCategoryId");

                    b.ToTable("NewCategory");
                });

            modelBuilder.Entity("Electronic.Domain.Models.New.NewItem", b =>
                {
                    b.Property<int>("NewItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewItemId"));

                    b.Property<string>("FullContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ThumbnailImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NewItemId");

                    b.HasIndex("ThumbnailImageId")
                        .IsUnique()
                        .HasFilter("[ThumbnailImageId] IS NOT NULL");

                    b.ToTable("NewItem");
                });

            modelBuilder.Entity("Electronic.Domain.Models.New.NewItemNewCategory", b =>
                {
                    b.Property<int>("NewItemId")
                        .HasColumnType("int");

                    b.Property<int>("NewCategoryId")
                        .HasColumnType("int");

                    b.HasKey("NewItemId", "NewCategoryId");

                    b.HasIndex("NewCategoryId");

                    b.ToTable("NewItemNewCategory");
                });

            modelBuilder.Entity("Electronic.Domain.Models.Advertisement", b =>
                {
                    b.HasOne("Electronic.Domain.Models.Core.Media", "Media")
                        .WithOne()
                        .HasForeignKey("Electronic.Domain.Models.Advertisement", "MediaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Media");
                });

            modelBuilder.Entity("Electronic.Domain.Models.Core.Address", b =>
                {
                    b.HasOne("Electronic.Domain.Models.Core.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Electronic.Domain.Models.Core.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("Electronic.Domain.Models.Core.StateOrProvince", "StateOrProvince")
                        .WithMany()
                        .HasForeignKey("StateOrProvinceId");

                    b.Navigation("Country");

                    b.Navigation("District");

                    b.Navigation("StateOrProvince");
                });

            modelBuilder.Entity("Electronic.Domain.Models.Core.District", b =>
                {
                    b.HasOne("Electronic.Domain.Models.Core.StateOrProvince", "StateOrProvince")
                        .WithMany("Districts")
                        .HasForeignKey("StateOrProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StateOrProvince");
                });

            modelBuilder.Entity("Electronic.Domain.Models.Core.StateOrProvince", b =>
                {
                    b.HasOne("Electronic.Domain.Models.Core.Country", "Country")
                        .WithMany("StateOrProvinces")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Electronic.Domain.Models.New.NewItem", b =>
                {
                    b.HasOne("Electronic.Domain.Models.Core.Media", "ThumbnailImage")
                        .WithOne()
                        .HasForeignKey("Electronic.Domain.Models.New.NewItem", "ThumbnailImageId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ThumbnailImage");
                });

            modelBuilder.Entity("Electronic.Domain.Models.New.NewItemNewCategory", b =>
                {
                    b.HasOne("Electronic.Domain.Models.New.NewCategory", "NewCategory")
                        .WithMany("NewItemNewCategories")
                        .HasForeignKey("NewCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Electronic.Domain.Models.New.NewItem", "NewItem")
                        .WithMany("NewItemNewCategories")
                        .HasForeignKey("NewItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NewCategory");

                    b.Navigation("NewItem");
                });

            modelBuilder.Entity("Electronic.Domain.Models.Core.Country", b =>
                {
                    b.Navigation("StateOrProvinces");
                });

            modelBuilder.Entity("Electronic.Domain.Models.Core.StateOrProvince", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("Electronic.Domain.Models.New.NewCategory", b =>
                {
                    b.Navigation("NewItemNewCategories");
                });

            modelBuilder.Entity("Electronic.Domain.Models.New.NewItem", b =>
                {
                    b.Navigation("NewItemNewCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
